# vim: filetype=yaml.ansible

- name: Get currently installed zsh path
  ansible.builtin.command: "which zsh"
  register: zsh_path
  ignore_errors: true
  changed_when: false

- name: Set default shell to zsh if not set or not using the latest zsh
  become: true
  ansible.builtin.shell: chsh -s "$(which zsh)" "{{ ansible_env.USER }}"
  register: chsh_result
  when:
    - zsh_path.stdout != ""
    - ansible_user_shell != zsh_path.stdout
  changed_when: "chsh_result.rc == 0"

- name: Create the ansible config file
  ansible.builtin.copy:
    dest: "{{ ansible_env.HOME }}/.ansible.cfg"
    content: |
      [defaults]
      inventory = {{ playbook_dir }}/hosts
      ask_become_pass = True
    mode: '0644'

- name: Check for xsh file
  ansible.builtin.stat:
    path: "{{ xsh_src }}"
  register: xsh_file_info

- name: Install sgleizes/xsh
  when: not xsh_file_info.stat.exists
  block:
    - name: Get latest version of xsh
      get_latest_github_tag:
        owner: sgleizes
        repo: xsh
      register: gh_tag
    - name: Create xsh dir
      ansible.builtin.file:
        path: "{{ xsh_dir }}"
        state: directory
        mode: '0755'
    - name: Unzip sgleizes/xsh
      ansible.builtin.unarchive:
        src: "https://github.com/sgleizes/xsh/archive/refs/tags/{{ gh_tag.latest }}.tar.gz"
        dest: "{{ xsh_dir }}"
        remote_src: true
        extra_opts:
          - "--strip-components=1"
    - name: Bootstrap all shells
      ansible.builtin.shell: |
        . {{ xsh_src }}
        xsh bootstrap --shells posix:bash:zsh
      register: xsh_result
      changed_when: "xsh_result.rc == 0"
