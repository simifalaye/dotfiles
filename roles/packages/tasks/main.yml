# vim: filetype=yaml.ansible

- name: Override some variables based on distribution
  ansible.builtin.include_vars: "{{ item }}"
  with_fileglob:
    - "../vars/{{ ansible_distribution }}.yml"
    - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int }}.yml"
  when: item is file

# Install common packages that should be availabe on all package managers (with the same name)
- name: Install core common packages
  become: true
  ansible.builtin.package:
    name:
      - "{{ python_pkg_name }}"
      - "{{ pip_pkg_name }}"
      - "{{ venv_pkg_name }}"
      - atool
      - bat
      - bitwise
      - calc
      - cloc
      - elinks
      - fzf
      - htop
      - jq
      - nodejs
      - npm
      - ripgrep
      - rsync
      - tig
      - tmux
      - tree
      - unison
      - zsh
    state: present

# Install common gui packages that should be availabe on all package managers (with the same name)
- name: Install core gui packages
  become: true
  ansible.builtin.apt:
    name:
      - arandr
      - autorandr
      - dunst
      - mpv
      - nitrogen
      - pasystray
      - peek
      - policykit-1-gnome
      - ppa-purge
      - redshift
      - rofi
      - screenkey
      - scrot
      - zathura
    state: present
  when:
    - ansible_env.XDG_CURRENT_DESKTOP is defined
    - ansible_env.XDG_CURRENT_DESKTOP != ""

- name: Install common pip packages
  ansible.builtin.pip:
    name:
      - pynvim
      - trash-cli
    state: present

- name: Install common global npm packages
  become: true
  npm:
    name: "{{ item }}"
    global: true
    state: present
  loop:
    - n # Used for downloading other node versions
    - neovim

- name: Set node/npm versions to lts
  become: true
  ansible.builtin.shell: |
    node_ver="$(node --version)"
    node_ver="${node_ver#v}"
    lts_ver="$(sudo n --lts)"
    if [[ "${node_ver}" != "${lts_ver}" ]]; then
      sudo n lts
      echo "NODE_VER_EQ"
    fi
  args:
    executable: /bin/bash
  register: node_ver_check
  changed_when: '"NODE_VER_EQ" in node_ver_check.stdout'

# Install apps that require more complex installation processes
- name: Include standalone package installer tasks
  ansible.builtin.include_tasks: "{{ outer_item }}"
  loop:
    - cheat.yml
    - delta.yml
    - exa.yml
    - fd.yml
    - neovim.yml
    - zoxide.yml
  loop_control:
    loop_var: outer_item
