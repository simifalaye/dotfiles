# vim: filetype=tmux foldmethod=marker foldmarker={{{,}}}
#
# Tmux configuration file.
# Helpful sources:
# - https://github.com/samoshkin/tmux-config/tree/master/tmux
# - https://github.com/sgleizes/dotfiles/tree/master/.config/tmux
#

# Version specific commands
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run 'tmux setenv -g TMUX_VERSION "$(tmux -V | sed -En "s/^tmux ([0-9]+(\.[0-9]+)?).*/\1/p")"'

# Create require dirs
run "mkdir -p ~/.local/share/tmux"
run "mkdir -p ~/.local/state/tmux"

# {{{ Options

#
# Server options
#

# Faster command sequences. Over a slow network this might need to be increased.
set -s escape-time 0

# Focus events enabled to pass through to application
set -s focus-events on

# Path to the history file for tmux commands.
set -s history-file "~/.cache/tmux/history"

#
# Global session/window options
#

# Detect the correct TERM value for new sessions.
if-shell '[ $(tput colors) = 256 ]' \
    'set -g default-terminal "tmux-256color"' \
    'set -g default-terminal "tmux"'

# Enable true color.
set -ga terminal-overrides ",*:Tc"

# Use regular interactive shells instead of login shells.
# This is a rather contextual choice.
# See https://superuser.com/questions/968942/why-does-tmux-create-new-windows-as-login-shells-by-default
# http://openbsd-archive.7691.n7.nabble.com/tmux-and-login-shells-td170948.html
set -g default-command "exec ${SHELL}"

# Use configured shell
set -g default-shell "${SHELL}"

# Destroy session when detaching
set -g detach-on-destroy on

# Start window/pane indexes from 1 instead of 0.
set -g base-index 1
set -g pane-base-index 1

# When a window is closed, automatically renumber the other windows in numerical order.
set -g renumber-windows on

# Time in milliseconds the status messages are shown.
set -g display-time 4000

# Time in millisecond the pane numbers are shown and allowed to be selected.
set -g display-panes-time 1000

# Refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# Maximum number of lines held in window/pane history.
set -g history-limit 50000

# Time in milliseconds to allow multiple commands to be entered without the prefix-key.
set -g repeat-time 600

# Monitor windows for activity by default.
set -g monitor-activity on

# Disable wrap search
set -g wrap-search off

# Notify of activity/silence in other windows only.
set -g activity-action other
set -g silence-action other

# Disable all bells.
set -g bell-action none

# Send a bell on activity.
set -g visual-activity off
# Display a status message instead of a bell on silence.
set -g visual-silence on

# Word separators for the copy-mode.
set -g word-separators " ._-~=+:;?!@&*()[]{}|<>/"

# Enable mouse support by default.
set -g mouse on

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# Useful for multi-monitor setup
set-window-option -g aggressive-resize on

# Renew environment variables when session is created
set -g update-environment \
      "DISPLAY \
      SSH_ASKPASS \
      SSH_AUTH_SOCK \
      SSH_AGENT_PID \
      SSH_CONNECTION \
      SSH_TTY \
      WINDOWID \
      XAUTHORITY"

# Required for osc52
set-option -s set-clipboard on

# Required for base16 colors
if-shell -b '[ "$(echo "$TMUX_VERSION >= 3.3" | bc)" = 1 ]' {
  set -g allow-passthrough on
}

# Required (only) on OS X
if-shell -b "uname | grep -q Darwin && command -v reattach-to-user-namespace >/dev/null" {
  set -g default-command "reattach-to-user-namespace -l $SHELL"
}

# Status bar
set -g status on
set -g status-position top

# }}}

# {{{ Key Bindings

#
# Command aliases
#

### Command aliases & enhancements <<<
set -s command-alias[100] show-pane-name='set -gq pane-border-status top'
set -s command-alias[101] hide-pane-name='set -gq pane-border-status off'
set -s command-alias[102] toggle-pane-name="if \
    '[ \"\$(tmux show -g pane-border-status)\" = \"pane-border-status off\" ]' \
    'show-pane-name' \
    'hide-pane-name'"
set -s command-alias[103] rename-pane='select-pane -T'
set -s command-alias[104] lock-pane="select-pane -d"
set -s command-alias[105] unlock-pane="select-pane -e"
set -s command-alias[106] reload-config="run \
    \"tmux display -p '#{config_files}' | \
        tr ',' '\\n' | \
        xargs -I % tmux source %\ && tmux display 'Reloaded config'"

# Dump tmux history to file
set -s command-alias[107] dump-history="run \
    'tmux command-prompt -p \"save history to file:\" \
            -I \"#{pane_current_path}/tmux-hist-\$(date +%Y-%m-%d-%H-%M-%S).txt\" \
        \"capture-pane -S - -E -; save-buffer %1; delete-buffer;\"'"

# Colored choose-tree
set -s command-alias[108] choose-tree="choose-tree -F '#{?pane_format,\
#[fg=green]#{pane_current_command} #[fg=white]#{pane_title},\
#{?window_format,\
#[fg=yellow]#{?window_zoomed_flag,#[italics],}#{window_name}#{?#{==:#{window_panes},1}, \
#{?#{!=:#{?window_zoomed_flag,#[italics],}#{window_name},#[fg=green]#{pane_current_command}},\
#[fg=green]#{pane_current_command} ,}\
#[fg=white]#{pane_title},},\
#{?session_grouped, (group #{session_group}: #{session_group_list}),}\
#{?session_attached,#[fg=blue](attached),#[fg=magenta](unattached)}}}'"

# Use fzf to select tmux windows
# Source: https://stackoverflow.com/a/38160854
%hidden list_windows="tmux list-windows -aF '##S:##I (##W)' | \
    sed -e 's/^\\\\([^:]*\\\\):/\\\\x1b[34m\\\\1\\\\x1b[0m:/' \
        -e 's/:\\\\([0-9]\\\\+\\\\) /:\\\\x1b[32m\\\\1\\\\x1b[0m /' \
        -e 's/(\\\\(.*\\\\))\$/(\\\\x1b[33m\\\\1\\\\x1b[0m)/'"
%hidden list_sessions="tmux list-sessions -F '##S'"
set -s command-alias[109] fzf-find-window="run -b \"$list_windows | \
    fzf --no-preview --ansi --color hl:reverse:-1,hl+:reverse:-1 \
        --prompt 'Tmux windows> ' \
        --tmux center,border-native,\
\\\$(w=\\\$(tmux display -p '#{window_width}'); echo \\\$(( w < 64 ? w : 64 ))),\
\\\$(h=\\\$(tmux display -p '#{window_height}'); echo \\\$(( h < 16 ? h : 16 ))) \
        --bind \\\"ctrl-x:execute(echo {+} | \
            sed 's/([^()]*)//g' | \
            sed 's/\\\\s\\\\+/\\\\n/g' | \
            tac | \
            xargs -I % tmux kill-window -t %)+reload($list_windows)\\\" | \
    tail -n1 | \
    sed 's/\\s*(.*)\$//' | \
    xargs -r tmux switch -t\""
set -s command-alias[110] fzf-find-session="run -b \"$list_sessions | \
    fzf --no-preview --ansi --color hl:reverse:-1,hl+:reverse:-1 \
        --prompt 'Tmux sessions> ' \
        --tmux center,border-native,\
\\\$(w=\\\$(tmux display -p '#{window_width}'); echo \\\$(( w < 64 ? w : 64 ))),\
\\\$(h=\\\$(tmux display -p '#{window_height}'); echo \\\$(( h < 16 ? h : 16 ))) \
        --bind \\\"ctrl-x:execute(echo {+} | \
            xargs -I % tmux kill-session -t %)+reload($list_sessions)\\\" | \
    tail -n1 | \
    sed 's/\\s*(.*)\$//' | \
    xargs -r tmux switch-client -t\""

#
# Root
#

# Clear both the screen and tmux history buffer.
bind -n 'C-S-l' send-keys 'C-l' \; run 'sleep 0.1' \; clear-history

#
# Prefix
#

# Set the prefix key to C-s and C-g for nested sessions
set -g prefix 'C-s'
bind 'C-s' send-prefix
bind -n 'C-g' send-prefix

# Rebind 'w' to the colored choose-tree command
bind -N 'Choose windows' w choose-tree -Zw

# Choose sessions
bind -N 'Choose sessions' a choose-tree -Zs

# if 'fzf --version' {
#     bind -N 'Choose windows(fzf)' w fzf-find-window
#     bind -N 'Choose sessions(fzf)' a fzf-find-session
# }

# Split windows vim style
bind-key -N 'Split window horizontally' v split-window -h
bind-key -N 'Split window vertically' s split-window -v

# Swap windows
bind -N 'Swap window left' -r P swap-window -t -1
bind -N 'Swap window right' -r N swap-window -t +1

# Last window
bind -N 'Last window' -r \\ last-window

# Select windows vim style
bind -N 'Select window left' h select-pane -L
bind -N 'Select window down' j select-pane -D
bind -N 'Select window up' k select-pane -U
bind -N 'Select window right' l select-pane -R
bind -N 'Select window left' C-h select-pane -L
bind -N 'Select window down' C-j select-pane -D
bind -N 'Select window up' C-k select-pane -U
bind -N 'Select window right' C-l select-pane -R

# Resize panes
bind -N 'Resize pane left' M-h resize-pane -L 5
bind -N 'Resize pane down' M-k resize-pane -D 5
bind -N 'Resize pane up' M-j resize-pane -U 5
bind -N 'Resize pane right' M-l resize-pane -R 5

# Dump history
bind -N 'Dump history' M-d dump-history

# Enter backward search mode directly.
bind -N 'Search backward for a regular expression' / copy-mode \; send '?'

# Toggle locked mode
bind -N 'Toggle locked mode' -T root 'M-;' \
  set prefix None \;\
  set key-table off \;\
  set -g @tmux_locked_mode 1 \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S
bind -N 'Toggle locked mode' -T off 'M-;' \
  set -u prefix \;\
  set -u key-table \;\
  set -g @tmux_locked_mode 0 \;\
  refresh-client -S

# Configuration management.
bind -N 'Edit tmux configuration' 'C-e' run \
  'tmux popup -w90% -h90% -E -d "#{pane_current_path}" ${VISUAL:-${EDITOR}} "#{config_files}" && tmux reload-config'
bind -N 'Reload the tmux configuration' 'C-r' run \ 'tmux reload-config'

#
# Copy mode
#

# No regex syntax when doing incremental search :(
# https://github.com/tmux/tmux/issues/2205
bind -N 'Begin selection' -T copy-mode-vi v send -X begin-selection
bind -N 'Begin rectangle selection' -T copy-mode-vi C-v send -X begin-selection \; send -X rectangle-toggle
bind -N 'Yank' -T copy-mode-vi y send -X copy-pipe

# }}}

# {{{ Plugins

#
# catppuccin/tmux
#

set -g @plugin 'catppuccin/tmux#v2.1.3'

set -g @catppuccin_flavor "mocha"
set -g @catppuccin_window_text " #W"
set -g @catppuccin_window_current_text " #W"
set -g @catppuccin_pane_status_enabled "yes"
set -g @catppuccin_pane_default_fill "all"
set -g @catppuccin_window_flags "icon"
set -g @catppuccin_window_flags_icon_last " 󰖰" # -
set -g @catppuccin_window_flags_icon_current " 󰖯" # *
set -g @catppuccin_window_flags_icon_zoom " 󰁌" # Z
set -g @catppuccin_window_flags_icon_mark " 󰃀" # M
# set -g @catppuccin_window_flags_icon_silent " 󰂛" # ~
# set -g @catppuccin_window_flags_icon_activity " 󱅫" # #
# set -g @catppuccin_window_flags_icon_bell " 󰂞" # !
set -g @catppuccin_window_flags_icon_silent "" # ~
set -g @catppuccin_window_flags_icon_activity "" # #
set -g @catppuccin_window_flags_icon_bell "" # !

set -g status-left ""
set -g status-right "#{E:@catppuccin_status_session}"
set -ag status-right "#{E:@catppuccin_status_date_time}"

#
# tmux-yank
#

set -g @plugin 'tmux-plugins/tmux-yank'

# Use osc52 over SSH
if-shell '[ -n "${SSH_TTY}" ]' {
  # Override copy to use osc52 in SSH
  set -g @override_copy_command "tmux load-buffer -w -"
}

#
# tmux-resurrect
#

set -g @plugin 'tmux-plugins/tmux-resurrect'

# Save directory for tmux-resurrect.
set -g @resurrect-dir "~/.local/state/tmux/resurrect"

# Capture and restore pane contents.
set -g @resurrect-capture-pane-contents on

# Key bindings for tmux-resurrect.
set -g @resurrect-save M-s
set -g @resurrect-restore M-r

# Hooks for tmux-resurrect.
set -g @resurrect-hook-pre-restore-all '
  # Prevent activity notifications while restoring.
  tmux set -g monitor-activity off
'
set -g @resurrect-hook-post-restore-all '
  # Restore automatic-rename after environment restore.
  # See https://github.com/tmux-plugins/tmux-resurrect/issues/57.
  for session_window in $(tmux list-windows -a -F "#{session_name}:#{window_index}"); do \
    tmux set -t $session_window automatic-rename on;
  done;

  # Restore monitor-activity after a delay to avoid the spurious notifications.
  # NOTE If the session is started in the background, for some reason attaching after
  # monitor-activity is restored will still mark all windows with the activity flag.
  # This is the reason for the sensibly high delay.
  { sleep 15; tmux set -g monitor-activity on; } &
'

#
# tmux-continuum
#

set -g @plugin 'tmux-plugins/tmux-continuum'

# Restore the last saved environment automatically when tmux starts.
set -g @continuum-restore on
set -g @continuum-save-interval 10

#
# tpm
#

setenv -g TMUX_PLUGIN_MANAGER_PATH "~/.local/share/tmux/plugins"
set -g @plugin 'tmux-plugins/tpm'

# Install tpm if not installed
if-shell "test ! -d ~/.local/share/tmux/plugins/tpm" \
    "run 'git clone https://github.com/tmux-plugins/tpm ~/.local/share/tmux/plugins/tpm && ~/.local/share/tmux/plugins/tpm/bin/install_plugins'"

# Initialize the plugin manager (should be last in the config file).
run "~/.local/share/tmux/plugins/tpm/tpm"

# }}}
