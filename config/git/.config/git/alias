# vim: filetype=gitconfig
#
# Alias configuration for git.
#

# Named aliases
[alias]
    # List aliases
    alias = !git config --get-regexp alias | cut -b 7-
    # Edit last commit
    amend = commit --amend
    # Amend but don't edit message
    commend = commit --amend --no-edit

    # Remove file(s) from Git but not from disk.
    untrack = rm -r --cached --
      # Unstage changes from the index.
    unstage = reset HEAD --

    # Reset branch
    resetorigin = !git fetch origin && git reset --hard
    # Pull rebase & submodule update
    up = !git pull --rebase && git submodule update

# Short aliases
# https://github.com/sorin-ionescu/prezto/blob/master/modules/git/alias.zsh
[alias]
    # Branch (b)
    b   = branch
    ba  = branch --all
    bl  = branch --all --verbose
    bc  = checkout -b
    bs  = -p show-branch
    bsa = -p show-branch --all
    br  = reset
    brs = reset --soft
    brh = reset --hard
    bx  = branch --delete
    bb  = switch

    # Commit (c)
    c   = commit
    ca  = commit --all
    cm  = commit --message
    cam = commit --all --message
    co  = checkout
    cr  = revert
    cs  = show
    cp  = cherry-pick --ff
    cpa = cherry-pick --no-commit

    # Fetch (f)
    f  = fetch
    fa = fetch --all
    fc = clone
    ff = pull
    fr = pull --rebase

    # Index (i)
    ia  = add
    iaa = add --all
    iap = add --patch
    iu  = add --update
    id  = diff --cached
    idd = diff --cached --word-diff
    idt = difftool --cached
    ir  = restore --staged
    irp = restore --staged --patch
    ix = rm -r --cached

    # Log (l)
    l  = log --topo-order
    ls = log --topo-order --stat
    ld = log --topo-order --stat --patch
    lo = log --topo-order --pretty=brief
    lg = log --topo-order --pretty=brief --all --graph
    ll = review

    # Merge (m)
    m  = merge
    mt = mergetool

    # Push (p)
    p   = push
    pf  = push --force-with-lease
    pa  = push --all
    pt  = push --tags
    pat = !git push --all && git push --tags
    pc  = !git push --set-upstream origin "$(git symbolic-ref --short HEAD)"
    pp  = !git pull origin "$(git symbolic-ref --short HEAD)" && git push origin "$(git symbolic-ref --short HEAD)"

    # Rebase (r)
    r  = rebase
    ri = rebase --interactive
    ra = rebase --abort
    rc = rebase --continue
    rs = rebase --skip

    # Stash (s)
    s   = stash
    sk  = stash push --keep-index
    ss  = stash push --include-untracked
    sp  = stash push --patch --no-keep-index
    sd  = stash show --patch --stat
    sl  = stash list
    sa  = stash pop
    sx  = stash drop

    # Tag (t)
    t  = tag
    tl = tag --list
    tv = verify-tag

    # Working Copy (w)
    ws  = -p status -sb
    wss = -p status --no-short
    wsb = diff --name-status
    wd  = diff
    wdd = diff --word-diff
    wdt = difftool
    wr  = restore --staged --worktree
    wrp = restore --staged --worktree --patch
    wc  = clean
    wx = rm -r

    # Miscellaneous
    rem = remote --verbose
    sb = subtree
