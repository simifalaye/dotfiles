#!/bin/bash
#
# Installs core dependencies needed to deploy dotfiles

# Usage: has <cmd-1> <cmd-2> ... <cmd-n>
function has {
  for cmd in "$@"; do
    command -v "$cmd" >/dev/null || return 1
  done
}

# - Installs core dependencies:
#   - curl
#   - ansible
function install_deps {
  echo "### Installing dependencies"
  # Exit if anything fails within the function
  set -e

  # Install required apps
  os="$(uname)"
  case $os in
    'Linux')
      echo "### Detected Linux"
      if [ -f /etc/os-release ]; then
        # Install core dependencies
        if grep -q -E '(debian|ubuntu|linuxmint)' /etc/os-release; then
          echo "Detected Debian/Ubuntu/Linux Mint"
          sudo apt-get update
          sudo apt-get install -y curl python3 python3-pip
        elif grep -q -E '(centos|rhel|fedora)' /etc/os-release; then
          echo "Detected CentOS/RHEL/Fedora"
          if [ -f /etc/centos-release ]; then
            sudo yum update
            sudo yum install -y epel-release
          fi
          sudo yum install -y curl python3 python3-pip
        elif grep -q -E '(arch)' /etc/os-release; then
          echo "Detected Arch"
          sudo pacman -Syyu --noconfirm curl python python-pip
        elif grep -q -E '(opensuse)' /etc/os-release; then
          echo "Detected openSUSE"
          sudo zypper update
          sudo zypper install -y curl python3 python3-pip
        else
          echo "Unsupported Linux distribution"
          exit 1
        fi
      else
        echo "Unsupported Linux distribution"
        exit 1
      fi
      ;;
    *)
      echo "Unsupported OS"
      exit 1
      ;;
  esac

  # Ensure PATH for new python executable locations
  export PATH=${HOME}/.local/share/python/bin:${PATH}

  # Install ansible and required modules
  pip install ansible
  ansible-galaxy install -r requirements.yml
}

#-
#  Main
#-

# Install deps if not installed
if ! has curl ansible; then
  if ! install_deps; then
    echo "### Failed to install dependencies"
    exit 0
  fi
fi

# Prompt sudo so we don't have to ask-become-pass
sudo echo ""

# Run Ansible
ansible-playbook -i ./hosts ./local-dev-env.yml "$@"

# ansible-playbook --ask-become-pass -i ./hosts ./local-dev-env.yml "$@"
