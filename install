#!/bin/bash
#
# Installs core dependencies needed to deploy dotfiles

# Usage: has <cmd-1> <cmd-2> ... <cmd-n>
function has {
  for cmd in "$@"; do
    command -v "$cmd" >/dev/null || return 1
  done
}

# - Installs core dependencies:
#   - ansible
function install_deps {
  echo "### Installing dependencies"
  # Exit if anything fails within the function
  set -e

  # Install required apps
  os="$(uname)"
  case $os in
    'Linux')
      echo "### Detected Linux"
      if [ -f /etc/os-release ]; then
        # Install core dependencies
        if grep -q -E 'ubuntu' /etc/os-release; then
          echo "Detected Ubuntu"
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible
        elif grep -q -E '(arch)' /etc/os-release; then
          echo "Detected Arch"
          sudo pacman -S ansible
        elif grep -q -E '(opensuse)' /etc/os-release; then
          echo "Detected openSUSE"
          sudo zypper install ansible
        else
          echo "Unsupported Linux distribution"
          exit 1
        fi
      else
        echo "Missing linux os-release file"
        exit 1
      fi
      ;;
    *)
      echo "Unsupported OS"
      exit 1
      ;;
  esac

  # Install required modules
  ansible-galaxy install -r requirements.yml
}

#-
#  Main
#-

# Install deps if not installed
if ! has ansible; then
  if ! install_deps; then
    echo "### Failed to install dependencies"
    exit 1
  fi
fi

# Prompt sudo so we don't have to ask-become-pass
sudo echo ""

# Run Ansible
ansible-playbook -i ./hosts ./local-dev-env.yml "$@"
